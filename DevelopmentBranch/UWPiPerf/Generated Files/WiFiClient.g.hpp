//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "WiFiClient.xaml.h"

void ::SDKTemplate::WiFiTestTools::WiFiClient::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///WiFiClient.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}

void ::SDKTemplate::WiFiTestTools::WiFiClient::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
        case 1:
            {
                this->InputTextBlock0 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            }
            break;
        case 2:
            {
                this->HostNameForConnect = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            }
            break;
        case 3:
            {
                this->ServiceNameForConnect = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            }
            break;
        case 4:
            {
                this->TimeDuration = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            }
            break;
        case 5:
            {
                this->TimeInterval = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            }
            break;
        case 6:
            {
                this->ParallelNumber = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            }
            break;
        case 7:
            {
                this->SocketBufferSize = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            }
            break;
        case 8:
            {
                this->TcpMSS = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            }
            break;
        case 9:
            {
                this->NoDelayMode = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(__target);
            }
            break;
        case 10:
            {
                this->ClearReportMessages = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Button^>(this->ClearReportMessages))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::SDKTemplate::WiFiTestTools::WiFiClient::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&WiFiClient::ClearReportMessages_Click);
            }
            break;
        case 11:
            {
                this->ReportMessageBox = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
            }
            break;
        case 12:
            {
                this->ConnectSocket = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Button^>(this->ConnectSocket))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::SDKTemplate::WiFiTestTools::WiFiClient::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&WiFiClient::ConnectSocket_Click);
            }
            break;
        case 13:
            {
                this->StopConnect = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Button^>(this->StopConnect))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::SDKTemplate::WiFiTestTools::WiFiClient::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&WiFiClient::StopConnect_Click);
            }
            break;
        case 14:
            {
                this->TypeOfService = safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(__target);
            }
            break;
        case 15:
            {
                this->cbIPv4v6 = safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(__target);
            }
            break;
        case 16:
            {
                this->cbTcpUdp = safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(__target);
            }
            break;
        case 17:
            {
                this->DefaultLayout = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
            }
            break;
        case 18:
            {
                this->Below768Layout = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
            }
            break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::SDKTemplate::WiFiTestTools::WiFiClient::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    __connectionId;         // unreferenced
    __target;               // unreferenced
    return nullptr;
}


